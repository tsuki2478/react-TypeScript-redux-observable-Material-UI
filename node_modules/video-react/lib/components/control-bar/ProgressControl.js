import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import PropTypes from 'prop-types';
import React, { Component } from 'react';
import { findDOMNode } from 'react-dom';
import classNames from 'classnames';
import * as Dom from '../../utils/dom';
import SeekBar from './SeekBar';
var propTypes = {
  player: PropTypes.object,
  className: PropTypes.string
};

var ProgressControl =
/*#__PURE__*/
function (_Component) {
  _inherits(ProgressControl, _Component);

  function ProgressControl(props, context) {
    var _this;

    _classCallCheck(this, ProgressControl);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProgressControl).call(this, props, context));
    _this.state = {
      mouseTime: {
        time: null,
        position: 0
      }
    };
    _this.handleMouseMoveThrottle = _this.handleMouseMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(ProgressControl, [{
    key: "handleMouseMove",
    value: function handleMouseMove(event) {
      if (!event.pageX) {
        return;
      }

      var duration = this.props.player.duration;
      var node = findDOMNode(this.seekBar);
      var newTime = Dom.getPointerPosition(node, event).x * duration;
      var position = event.pageX - Dom.findElPosition(node).left;
      this.setState({
        mouseTime: {
          time: newTime,
          position: position
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var className = this.props.className;
      return React.createElement("div", {
        onMouseMove: this.handleMouseMoveThrottle,
        className: classNames('video-react-progress-control video-react-control', className)
      }, React.createElement(SeekBar, _extends({
        mouseTime: this.state.mouseTime,
        ref: function ref(c) {
          _this2.seekBar = c;
        }
      }, this.props)));
    }
  }]);

  return ProgressControl;
}(Component);

export { ProgressControl as default };
ProgressControl.propTypes = propTypes;
ProgressControl.displayName = 'ProgressControl';